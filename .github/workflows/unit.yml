name: Build

on:
  - push
  - workflow_dispatch

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install mypy
      - name: run mypy checks
        run: mypy src

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install .[doc]
      - name: install custom dependencies to avoid known issues
        run: |
          pip install git+https://github.com/jenshnielsen/sphinx.git@fix_9884
          pip install git+https://github.com/12rambau/deprecated.git@master
          sphinx-apidoc -o docs/api src
          sphinx-build -v -b html docs docs/_build/html -w warnings.txt
          python tests/check_warnings.py

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        include:
          - os: macos-latest  # macos test
            python-version: "3.11"
          - os: windows-latest  # windows test
            python-version: "3.11"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install .[test]
      - name: test with pytest
        run: pytest --color=yes --cov --cov-report=xml tests
      - name: assess dead fixtures
        if: matrix.python-version == '3.8'
        run: pytest --dead-fixtures

  coverage:
    runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v4
          with:
            python-version: "3.10"
        - name: Install dependencies
          run: pip install .[test]
        - name: test with pytest
          run: pytest --color=yes --cov --cov-report=xml tests
        - name: coverage
          run: coverage xml
        - name: codecov
          uses: codecov/codecov-action@v3
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            verbose: true





